#!/bin/bash

die() {
    notify-send "$@" >&2
    exit 1
}

# Usage: do_sync GROUP
#
# Run mbsync and echo the estimated number of new emails if new mail has been
# received
do_sync() {
    group="$1"
    cmd="mbsync $group"
    tmp=$(mktemp)
    before_count=$(new_count "$group")
    if ! script --quiet --return --command "$cmd" "$tmp" >/dev/null 2>&1; then
        grep -v '^Script' "$tmp" >&2
        die "failed to sync"
    fi

    after_count=$(new_count "$group")
    if [[ $before_count != $after_count ]]; then
        echo $((after_count - before_count))
    fi
}

# Usage new_count GROUP
#
# Count the number of files in the `new' directory in the inbox for the given
# group (Note: relies on the group name being the name of the local mail store
new_count() {
    group="$1"
    find "${maildir}/${group}/inbox/new" -type f | wc -l
}

maildir=~/mail
mbsyncrc=~/.mbsyncrc
groups=$(grep '^Group .\+' "$mbsyncrc" | awk '{print $2}')

counts=""

for group in $groups; do
    notify-send "Syncing ${group}..."
    count=$(do_sync $group)
    if [[ $? != "0" ]]; then
        exit $?
    fi

    if [[ -z $count ]]; then
        count="0"
    fi

    if [[ -n $counts ]]; then
        counts="${counts}, "
    fi
    counts="${counts}${group}: ${count}"
done

notify-send "Number of updates" "$counts"
